[{"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\index.js":"1","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Containers\\App.js":"2","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Containers\\Home.js":"3","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\Footer.js":"4","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\AboutHome.js":"5","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\Navbar.js":"6","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\ExperienceHome.js":"7","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\ContactHome.js":"8","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\ProjectsHome.js":"9","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\EducationHome.js":"10"},{"size":237,"mtime":1607962186637,"results":"11","hashOfConfig":"12"},{"size":110,"mtime":1607789729460,"results":"13","hashOfConfig":"12"},{"size":465,"mtime":1607962307140,"results":"14","hashOfConfig":"12"},{"size":1987,"mtime":1607789729322,"results":"15","hashOfConfig":"12"},{"size":2952,"mtime":1607961918647,"results":"16","hashOfConfig":"12"},{"size":5209,"mtime":1607959749844,"results":"17","hashOfConfig":"12"},{"size":3785,"mtime":1607959528288,"results":"18","hashOfConfig":"12"},{"size":4501,"mtime":1607957853353,"results":"19","hashOfConfig":"12"},{"size":3949,"mtime":1607956917243,"results":"20","hashOfConfig":"12"},{"size":3213,"mtime":1607789729258,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mnd08h",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\index.js",[],"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Containers\\App.js",[],["46","47"],"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Containers\\Home.js",["48"],"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\Footer.js",[],"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\AboutHome.js",[],"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\Navbar.js",["49","50"],"/* eslint-disable object-curly-newline */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DownloadIcon from '@material-ui/icons/GetApp';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport AboutHome from './AboutHome';\nimport ContactHome from './ContactHome';\nimport ProjectsHome from './ProjectsHome';\nimport ExperienceHome from './ExperienceHome';\nimport EducationHome from './EducationHome';\nimport { NavbarInfo } from '../Info.json';\n\nconst useStyles = makeStyles({\n  root: {\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    background: 'whitesmoke',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    justifyContent: 'center',\n  },\n  navItem: {\n    margin: '0.5rem',\n    alignSelf: 'center',\n  },\n  link: {\n    color: 'rgba(0, 0, 0, 0.87)',\n    fontSize: '0.8rem',\n  },\n  img: {\n    width: '2rem',\n  },\n  drawer: {\n    zIndex: '999',\n  },\n});\n\nconst Navbar = ({ setComponent }) => {\n  const classes = useStyles();\n  const { contact, experience, projects, education, resume } = NavbarInfo;\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleComponent = (Component) => {\n    setComponent(<Component />);\n  };\n\n  const handleClose = (Component) => {\n    if (Component != null) {\n      setComponent(<Component />);\n    }\n    setDrawerOpen(false);\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar className={classes.root}>\n          <Grid container className={classes.container}>\n            <Hidden smDown>\n              <Divider orientation=\"vertical\" flexItem />\n              <Button\n                onClick={() => handleComponent(ContactHome)}\n                className={classes.navItem}\n              >\n                {contact}\n              </Button>\n            </Hidden>\n            <Hidden xsDown>\n              <Divider orientation=\"vertical\" flexItem />\n              <Button\n                onClick={() => handleComponent(ProjectsHome)}\n                className={classes.navItem}\n              >\n                {projects}\n              </Button>\n            </Hidden>\n            <Divider orientation=\"vertical\" flexItem />\n            <IconButton\n              onClick={() => handleComponent(AboutHome)}\n              className={classes.navItem}\n            >\n              <HomeIcon />\n            </IconButton>\n            <Divider orientation=\"vertical\" flexItem />\n            <Hidden xsDown>\n              {/* <Button\n                onClick={() => handleComponent(ExperienceHome)}\n                className={classes.navItem}\n              >\n                {experience}\n              </Button> */}\n              <Divider orientation=\"vertical\" flexItem />\n            </Hidden>\n            <Hidden smDown>\n              <Button\n                onClick={() => handleComponent(EducationHome)}\n                className={classes.navItem}\n              >\n                {education}\n              </Button>\n              <Divider orientation=\"vertical\" flexItem />\n            </Hidden>\n          </Grid>\n          <Link href={resume.href} target=\"_blank\" rel=\"noopener\" underline=\"none\">\n            <Hidden xsDown>\n              <Button\n                className={classes.link}\n              >\n                {resume.text}\n              </Button>\n            </Hidden>\n            <IconButton>\n              <DownloadIcon />\n            </IconButton>\n          </Link>\n          <Hidden mdUp>\n            <IconButton\n              aria-label=\"open drawer\"\n              onClick={() => setDrawerOpen(!drawerOpen)}\n              edge=\"start\"\n              className={classes.drawer}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor=\"left\" open={drawerOpen} onClose={() => handleClose(null)}>\n        <Button\n          onClick={() => handleClose(ContactHome)}\n          className={classes.link}\n        >\n          {contact}\n        </Button>\n        <Button\n          onClick={() => handleClose(ProjectsHome)}\n          className={classes.link}\n        >\n          {projects}\n        </Button>\n        {/* <Button\n          onClick={() => handleClose(ExperienceHome)}\n          className={classes.link}\n        >\n          {experience}\n        </Button> */}\n        <Button\n          onClick={() => handleClose(EducationHome)}\n          className={classes.link}\n        >\n          {education}\n        </Button>\n      </Drawer>\n    </>\n  );\n};\n\nNavbar.propTypes = {\n  setComponent: PropTypes.func.isRequired,\n};\n\nexport default Navbar;\n","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\ExperienceHome.js",[],"C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\ContactHome.js",["51","52","53","54","55","56","57"],"/* eslint-disable object-curly-newline */\nimport React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grow from '@material-ui/core/Grow';\nimport Grid from '@material-ui/core/Grid';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { buttons, ContactInfo } from '../Info.json';\n\n// eslint-disable-next-line no-unused-vars\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    padding: '5rem 1rem',\n    textAlign: 'center',\n  },\n  background: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    opacity: '80%',\n    width: '100%',\n    height: '100%',\n    backgroundImage: `url(${ContactInfo.background})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    zIndex: '-999',\n  },\n  title: {\n    fontWeight: 400,\n    fontSize: '3em',\n    margin: '1rem',\n  },\n  picture: {\n    width: '100%',\n  },\n  columnImg: {\n    padding: '0 5rem',\n  },\n  columnForm: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  form: {\n    display: 'flex',\n     flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    padding: '0 2rem',\n  },\n  i:{\n    margin: 'auto',\n    marginLeft:'200px',\n  }\n}));\n\nconst emptyEmail = {\n  from_name: '',\n  from_email: '',\n  to_name: 'asma496',\n  message_html: '',\n};\n\nconst ContactHome = () => {\n  const classes = useStyles();\n  const { title, zoom, lat, lng, googleMapsKey, userID, serviceID, templateID } = ContactInfo;\n  const { wait, submit } = buttons;\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [email, setEmail] = useState(emptyEmail);\n\n\n  const handleChange = (e) => {\n    e.persist();\n    setEmail((prev) => (\n      { ...prev, [e.target.name]: e.target.value }\n    ));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(null);\n    try {\n      await emailjs.send(serviceID, templateID, email, userID);\n      setMessage('Thank you!');\n      setEmail(emptyEmail);\n    } catch (err) {\n      setMessage('error!');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <Slide direction=\"up\" in timeout={1000}>\n      <Grid component=\"section\" container className={classes.root}>\n        <div className={classes.background} />\n        <Grid item xs={12} >\n          <Typography className={classes.title} variant=\"h2\">\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={12} className={classes.columnForm}>\n          <form onSubmit={handleSubmit} className={classes.form}>\n            <TextField\n              margin=\"dense\"\n              name=\"from_name\"\n              variant=\"outlined\"\n              id=\"from_name\"\n              value={email.from_name}\n              label=\"your name (optional)\"\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"dense\"\n              type=\"email\"\n              name=\"from_email\"\n              variant=\"outlined\"\n              id=\"from_email\"\n              value={email.from_email}\n              label=\"email\"\n              onChange={handleChange}\n              required\n            />\n            <TextField\n              margin=\"dense\"\n              multiline\n              rows=\"8\"\n              name=\"message_html\"\n              variant=\"outlined\"\n              id=\"message_html\"\n              value={email.message_html}\n              label=\"type here\"\n              onChange={handleChange}\n              required\n            />\n            <Button\n              className={classes.button}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"inherit\"\n              disabled={loading}\n            >\n              {loading ? wait : submit}\n            </Button>\n            {message === null ? null : (\n              <Typography variant=\"caption\" className={classes.text}>\n                {message}\n              </Typography>\n            )}\n          </form>\n        </Grid>\n      </Grid>\n    </Slide>\n  );\n};\n\nexport default ContactHome;\n","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\ProjectsHome.js",["58"],"import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Grow from '@material-ui/core/Grow';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ProjectsInfo, UrlIcons } from '../Info.json';\n\n// eslint-disable-next-line no-unused-vars\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '5rem 1rem',\n    textAlign: 'center',\n    minHeight: window.innerHeight,\n    position: 'relative',\n  },\n  background: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    opacity: '90%',\n    width: '100%',\n    height: '100%',\n    backgroundImage: `url(${ProjectsInfo.background})`,\n    backgroundSize: 'contain',\n    zIndex: '-999',\n  },\n  title: {\n    fontWeight: 400,\n    fontSize: '3em',\n    margin: '1rem',\n  },\n  links: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  subtitle: {\n    fontWeight: 300,\n    fontSize: '2rem',\n    margin: '1rem',\n    color: 'black',\n  },\n  caption: {\n    fontSize: '1rem',\n  },\n  picture: {\n    width: '100%',\n  },\n  img: {\n    boxShadow: '0px 10px 15px 5px gray',\n    maxHeight: '20rem',\n    maxWidth: '90%',\n  },\n  article: {\n    padding: '3rem 0',\n  },\n  columnInfo: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  columnImg: {\n    padding: '1rem 1rem 2rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    padding: '1rem',\n    display: 'flex',\n  },\n  iconList: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: '0 1rem',\n  },\n  icon: {\n    width: '2rem',\n  },\n}));\n\nconst ProjectsHome = () => {\n  const classes = useStyles();\n  const { title, projects } = ProjectsInfo;\n  return (\n    <Slide direction=\"up\" in timeout={1000}>\n      <Grid component=\"section\" container className={classes.root}>\n        <div className={classes.background} />\n        <Grid item xs={12}>\n          <Typography className={classes.title} variant=\"h2\">\n            {title}\n          </Typography>\n        </Grid>\n        {projects.map((item) => (\n          <Grid container key={uuidv4()} component=\"article\" className={classes.article}>\n            <Hidden mdUp>\n              <Grid item xs={12}>\n                <Typography className={classes.links} variant=\"h2\">\n                  <Link className={classes.subtitle} href={item.live} target=\"_blank\" rel=\"noreferrer\">\n                    {item.title}\n                  </Link>\n                  <Link className={classes.caption} href={item.source} target=\"_blank\" rel=\"noreferrer\">\n                    Source\n                  </Link>\n                </Typography>\n              </Grid>\n            </Hidden>\n            <Grid item xs={12} md={6} className={classes.columnImg}>\n              <Grow in timeout={3000}>\n                <picture className={classes.picture}>\n                  <img className={classes.img} src={item.screenshots[0]} alt=\"screenshot\" />\n                </picture>\n              </Grow>\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.columnInfo}>\n              <Hidden smDown>\n                <Typography className={classes.links} variant=\"h2\">\n                  <Link className={classes.subtitle} href={item.live} target=\"_blank\" rel=\"noreferrer\">\n                    {item.title}\n                  </Link>\n                  <Link className={classes.caption} href={item.source} target=\"_blank\" rel=\"noreferrer\">\n                    Source\n                  </Link>\n                </Typography>\n              </Hidden>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Slide>\n  );\n};\n\nexport default ProjectsHome;\n","C:\\Users\\Shahzii_Khan_01\\Desktop\\asma\\portfoliov2\\src\\Components\\EducationHome.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":20,"column":8,"nodeType":"65","messageId":"66","endLine":20,"endColumn":22},{"ruleId":"63","severity":1,"message":"68","line":58,"column":20,"nodeType":"65","messageId":"66","endLine":58,"endColumn":30},{"ruleId":"63","severity":1,"message":"69","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":14},{"ruleId":"63","severity":1,"message":"70","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":12},{"ruleId":"63","severity":1,"message":"71","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":24},{"ruleId":"63","severity":1,"message":"72","line":77,"column":18,"nodeType":"65","messageId":"66","endLine":77,"endColumn":22},{"ruleId":"63","severity":1,"message":"73","line":77,"column":24,"nodeType":"65","messageId":"66","endLine":77,"endColumn":27},{"ruleId":"63","severity":1,"message":"74","line":77,"column":29,"nodeType":"65","messageId":"66","endLine":77,"endColumn":32},{"ruleId":"63","severity":1,"message":"75","line":77,"column":34,"nodeType":"65","messageId":"66","endLine":77,"endColumn":47},{"ruleId":"63","severity":1,"message":"76","line":10,"column":24,"nodeType":"65","messageId":"66","endLine":10,"endColumn":32},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'ExperienceHome' is defined but never used.","'experience' is assigned a value but never used.","'Hidden' is defined but never used.","'Grow' is defined but never used.","'CircularProgress' is defined but never used.","'zoom' is assigned a value but never used.","'lat' is assigned a value but never used.","'lng' is assigned a value but never used.","'googleMapsKey' is assigned a value but never used.","'UrlIcons' is defined but never used.","no-global-assign","no-unsafe-negation"]